//
//	FIX Unified Repository mapping to Google Protocol Buffers
//
//	Copyright (c) FIX Protocol Ltd. All Rights Reserved.
//
//	Category: SecuritiesReferenceData
//
//	File: securitiesreferencedata.proto
//
import "meta.proto";
import "fix.proto";
import "session.proto";
import "common.proto";

option java_outer_classname = "SecuritiesReferenceData";
option java_package = "org.fixprotocol.components";
package SecuritiesReferenceData;

enum SecurityResponseTypeEnum {
	SECURITY_RESPONSE_TYPE_ACCEPT_AS_IS = 0			[(fix.enum_value)="1"];
	SECURITY_RESPONSE_TYPE_ACCEPT_WITH_REVISIONS = 1	[(fix.enum_value)="2"];
	SECURITY_RESPONSE_TYPE_CANNOT_MATCH_SELECTION_CRITERIA = 2	[(fix.enum_value)="6"];
	SECURITY_RESPONSE_TYPE_LIST_OF_SECURITIES_RETURNED_PER_REQUEST = 3	[(fix.enum_value)="4"];
	SECURITY_RESPONSE_TYPE_LIST_OF_SECURITY_TYPES_RETURNED_PER_REQUEST = 4	[(fix.enum_value)="3", (fix.enum_deprecated)=FIX_5_0_SP_1];
	SECURITY_RESPONSE_TYPE_REJECT_SECURITY_PROPOSAL = 5	[(fix.enum_value)="5"];
}

enum CorporateActionEnum {
	CORPORATE_ACTION_EX_DISTRIBUTION = 0			[(fix.enum_value)="B"];
	CORPORATE_ACTION_EX_DIVIDEND = 1			[(fix.enum_value)="A"];
	CORPORATE_ACTION_EX_INTEREST = 2			[(fix.enum_value)="E"];
	CORPORATE_ACTION_EX_RIGHTS = 3				[(fix.enum_value)="C"];
	CORPORATE_ACTION_NEW = 4				[(fix.enum_value)="D"];
	CORPORATE_ACTION_CUSIP = 5				[(fix.enum_value)="U"];
	CORPORATE_ACTION_CASH_DIVIDEND = 6			[(fix.enum_value)="F"];
	CORPORATE_ACTION_LIQUIDATION_REORGANIZATION = 7		[(fix.enum_value)="L"];
	CORPORATE_ACTION_MERGER_REORGANIZATION = 8		[(fix.enum_value)="M"];
	CORPORATE_ACTION_NON_INTEGER_STOCK_SPLIT = 9		[(fix.enum_value)="H"];
	CORPORATE_ACTION_POSITION_CONSOLIDATION = 10		[(fix.enum_value)="K"];
	CORPORATE_ACTION_REVERSE_STOCK_SPLIT = 11		[(fix.enum_value)="I"];
	CORPORATE_ACTION_RIGHTS_OFFERING = 12			[(fix.enum_value)="N"];
	CORPORATE_ACTION_SHAREHOLDER_MEETING = 13		[(fix.enum_value)="O"];
	CORPORATE_ACTION_SPECIAL_ACTION = 14			[(fix.enum_value)="S"];
	CORPORATE_ACTION_SPINOFF = 15				[(fix.enum_value)="P"];
	CORPORATE_ACTION_STANDARD_INTEGER_STOCK_SPLIT = 16	[(fix.enum_value)="J"];
	CORPORATE_ACTION_STOCK_DIVIDEND = 17			[(fix.enum_value)="G"];
	CORPORATE_ACTION_SYMBOL_CONVERSION = 18			[(fix.enum_value)="T"];
	CORPORATE_ACTION_TENDER_OFFER = 19			[(fix.enum_value)="Q"];
	CORPORATE_ACTION_WARRANT = 20				[(fix.enum_value)="R"];
	CORPORATE_ACTION_LEAP_ROLLOVER = 21			[(fix.enum_value)="V"];
	CORPORATE_ACTION_SUCCESSION_EVENT = 22			[(fix.enum_value)="W"];
}

message SecurityDefinition {
	option (fix.msg_type) = "d";
	optional string currency = 1				[(fix.tag)=15, (fix.type)=CURRENCY];
	optional bytes encoded_text = 2				[(fix.tag)=355, (fix.type)=DATA];
	optional fixed32 encoded_text_len = 3			[(fix.tag)=354, (fix.type)=LENGTH];
	optional string security_req_id = 4			[(fix.tag)=320, (fix.type)=STRING];
	optional string security_response_id = 5		[(fix.tag)=322, (fix.type)=STRING];
	optional SecurityResponseTypeEnum security_response_type = 6	[(fix.tag)=323, (fix.type)=INT];
	optional Session.StandardHeader standard_header = 7	[(fix.field_added)=FIX_4_2];
	optional Session.StandardTrailer standard_trailer = 8	[(fix.field_added)=FIX_4_2];
	optional string text = 9				[(fix.tag)=58, (fix.type)=STRING];
	optional Common.Instrument instrument = 10		[(fix.field_added)=FIX_4_3];
	optional sfixed32 clearing_business_date = 11		[(fix.tag)=715, (fix.type)=LOCAL_MKT_DATE];
	repeated Common.InstrmtLegGrp instrmt_leg_grp = 12	[(fix.tag)=555];
	optional Common.InstrumentExtension instrument_extension = 13	[(fix.field_added)=FIX_4_4];
	optional sfixed64 security_report_id = 14		[(fix.tag)=964, (fix.type)=INT];
	repeated Common.UndInstrmtGrp und_instrmt_grp = 15	[(fix.tag)=711];
	optional Common.ApplicationSequenceControl application_sequence_control = 16	[(fix.field_added)=FIX_5_0];
	repeated CorporateActionEnum corporate_action = 17	[packed=true,(fix.tag)=292, (fix.type)=MULTIPLE_CHAR_VALUE];
	repeated Common.MarketSegmentGrp market_segment_grp = 18	[(fix.tag)=1310];
	optional Common.SpreadOrBenchmarkCurveData spread_or_benchmark_curve_data = 19	[(fix.field_added)=FIX_5_0];
	repeated Common.Stipulations stipulations = 20		[(fix.tag)=232];
	optional Common.YieldData yield_data = 21		[(fix.field_added)=FIX_5_0];
	optional sfixed64 transact_time = 22			[(fix.tag)=60, (fix.type)=UTC_TIMESTAMP];
}
enum SecurityRequestTypeEnum {
	SECURITY_REQUEST_TYPE_REQUEST_LIST_SECURITIES = 0	[(fix.enum_value)="3", (fix.enum_deprecated)=FIX_5_0_SP_1];
	SECURITY_REQUEST_TYPE_REQUEST_LIST_SECURITY_TYPES = 1	[(fix.enum_value)="2", (fix.enum_deprecated)=FIX_5_0_SP_1];
	SECURITY_REQUEST_TYPE_REQUEST_SECURITY_IDENTITY_AND_SPECIFICATIONS = 2	[(fix.enum_value)="0"];
	SECURITY_REQUEST_TYPE_REQUEST_SECURITY_IDENTITY_FOR_SPECIFICATIONS = 3	[(fix.enum_value)="1"];
	SECURITY_REQUEST_TYPE_ALL_SECURITIES = 4		[(fix.enum_value)="8"];
	SECURITY_REQUEST_TYPE_MARKET_ID_OR_MARKET_ID = 5	[(fix.enum_value)="9"];
	SECURITY_REQUEST_TYPE_PRODUCT = 6			[(fix.enum_value)="6"];
	SECURITY_REQUEST_TYPE_SECURITY_TYPE_AND_OR_CFI_CODE = 7	[(fix.enum_value)="5"];
	SECURITY_REQUEST_TYPE_SYMBOL = 8			[(fix.enum_value)="4"];
	SECURITY_REQUEST_TYPE_TRADING_SESSION_ID = 9		[(fix.enum_value)="7"];
}

enum TradingSessionIdEnum {
	TRADING_SESSION_ID_AFTER_HOURS = 0			[(fix.enum_value)="6"];
	TRADING_SESSION_ID_AFTERNOON = 1			[(fix.enum_value)="4"];
	TRADING_SESSION_ID_DAY = 2				[(fix.enum_value)="1"];
	TRADING_SESSION_ID_EVENING = 3				[(fix.enum_value)="5"];
	TRADING_SESSION_ID_HALF_DAY = 4				[(fix.enum_value)="2"];
	TRADING_SESSION_ID_MORNING = 5				[(fix.enum_value)="3"];
}

enum TradingSessionSubIdEnum {
	TRADING_SESSION_SUB_ID_CLOSING_OR_CLOSING_AUCTION = 0	[(fix.enum_value)="4"];
	TRADING_SESSION_SUB_ID_CONTINUOUS = 1			[(fix.enum_value)="3"];
	TRADING_SESSION_SUB_ID_INTRADAY_AUCTION = 2		[(fix.enum_value)="6"];
	TRADING_SESSION_SUB_ID_OPENING_OR_OPENING_AUCTION = 3	[(fix.enum_value)="2"];
	TRADING_SESSION_SUB_ID_POST_TRADING = 4			[(fix.enum_value)="5"];
	TRADING_SESSION_SUB_ID_PRE_TRADING = 5			[(fix.enum_value)="1"];
	TRADING_SESSION_SUB_ID_QUIESCENT = 6			[(fix.enum_value)="7"];
}

enum ExpirationCycleEnum {
	EXPIRATION_CYCLE_EXPIRE_ON_TRADING_SESSION_CLOSE = 0	[(fix.enum_value)="0"];
	EXPIRATION_CYCLE_EXPIRE_ON_TRADING_SESSION_OPEN = 1	[(fix.enum_value)="1"];
	EXPIRATION_CYCLE_SPECIFIED_EXPIRATION = 2		[(fix.enum_value)="2"];
}

enum SubscriptionRequestTypeEnum {
	SUBSCRIPTION_REQUEST_TYPE_DISABLE_PREVIOUS_SNAPSHOT = 0	[(fix.enum_value)="2"];
	SUBSCRIPTION_REQUEST_TYPE_SNAPSHOT = 1			[(fix.enum_value)="0"];
	SUBSCRIPTION_REQUEST_TYPE_SNAPSHOT_AND_UPDATES = 2	[(fix.enum_value)="1"];
}

message SecurityDefinitionRequest {
	option (fix.msg_type) = "c";
	optional string currency = 1				[(fix.tag)=15, (fix.type)=CURRENCY];
	optional bytes encoded_text = 2				[(fix.tag)=355, (fix.type)=DATA];
	optional fixed32 encoded_text_len = 3			[(fix.tag)=354, (fix.type)=LENGTH];
	optional string security_req_id = 4			[(fix.tag)=320, (fix.type)=STRING];
	optional SecurityRequestTypeEnum security_request_type = 5	[(fix.tag)=321, (fix.type)=INT];
	optional Session.StandardHeader standard_header = 6	[(fix.field_added)=FIX_4_2];
	optional Session.StandardTrailer standard_trailer = 7	[(fix.field_added)=FIX_4_2];
	optional string text = 8				[(fix.tag)=58, (fix.type)=STRING];
	optional TradingSessionIdEnum trading_session_id = 9	[(fix.tag)=336, (fix.type)=STRING];
	optional Common.Instrument instrument = 10		[(fix.field_added)=FIX_4_3];
	optional SubscriptionRequestTypeEnum subscription_request_type = 11	[(fix.tag)=263, (fix.type)=CHAR];
	optional TradingSessionSubIdEnum trading_session_sub_id = 12	[(fix.tag)=625, (fix.type)=STRING];
	optional ExpirationCycleEnum expiration_cycle = 13	[(fix.tag)=827, (fix.type)=INT];
	repeated Common.InstrmtLegGrp instrmt_leg_grp = 14	[(fix.tag)=555];
	optional Common.InstrumentExtension instrument_extension = 15	[(fix.field_added)=FIX_4_4];
	repeated Common.UndInstrmtGrp und_instrmt_grp = 16	[(fix.tag)=711];
	optional string market_id = 17				[(fix.tag)=1301, (fix.type)=EXCHANGE];
	optional string market_segment_id = 18			[(fix.tag)=1300, (fix.type)=STRING];
	optional Common.SpreadOrBenchmarkCurveData spread_or_benchmark_curve_data = 19	[(fix.field_added)=FIX_5_0];
	repeated Common.Stipulations stipulations = 20		[(fix.tag)=232];
	optional Common.YieldData yield_data = 21		[(fix.field_added)=FIX_5_0];
}
enum SecurityUpdateActionEnum {
	SECURITY_UPDATE_ACTION_ADD = 0				[(fix.enum_value)="A"];
	SECURITY_UPDATE_ACTION_DELETE = 1			[(fix.enum_value)="D"];
	SECURITY_UPDATE_ACTION_MODIFY = 2			[(fix.enum_value)="M"];
}

message SecurityDefinitionUpdateReport {
	option (fix.msg_type) = "BP";
	optional sfixed32 clearing_business_date = 1		[(fix.tag)=715, (fix.type)=LOCAL_MKT_DATE];
	repeated CorporateActionEnum corporate_action = 2	[packed=true,(fix.tag)=292, (fix.type)=MULTIPLE_CHAR_VALUE];
	optional string currency = 3				[(fix.tag)=15, (fix.type)=CURRENCY];
	optional bytes encoded_text = 4				[(fix.tag)=355, (fix.type)=DATA];
	optional fixed32 encoded_text_len = 5			[(fix.tag)=354, (fix.type)=LENGTH];
	repeated Common.InstrmtLegGrp instrmt_leg_grp = 6	[(fix.tag)=555];
	optional Common.Instrument instrument = 7		[(fix.field_added)=FIX_4_4];
	optional sfixed64 security_report_id = 8		[(fix.tag)=964, (fix.type)=INT];
	optional string security_req_id = 9			[(fix.tag)=320, (fix.type)=STRING];
	optional string security_response_id = 10		[(fix.tag)=322, (fix.type)=STRING];
	optional SecurityResponseTypeEnum security_response_type = 11	[(fix.tag)=323, (fix.type)=INT];
	optional SecurityUpdateActionEnum security_update_action = 12	[(fix.tag)=980, (fix.type)=CHAR];
	optional Session.StandardHeader standard_header = 13	[(fix.field_added)=FIX_4_4];
	optional Session.StandardTrailer standard_trailer = 14	[(fix.field_added)=FIX_4_4];
	optional string text = 15				[(fix.tag)=58, (fix.type)=STRING];
	optional Common.ApplicationSequenceControl application_sequence_control = 16	[(fix.field_added)=FIX_5_0];
	optional Common.InstrumentExtension instrument_extension = 17	[(fix.field_added)=FIX_5_0];
	repeated Common.MarketSegmentGrp market_segment_grp = 18	[(fix.tag)=1310];
	optional Common.SpreadOrBenchmarkCurveData spread_or_benchmark_curve_data = 19	[(fix.field_added)=FIX_5_0];
	repeated Common.Stipulations stipulations = 20		[(fix.tag)=232];
	repeated Common.UndInstrmtGrp und_instrmt_grp = 21	[(fix.tag)=711];
	optional Common.YieldData yield_data = 22		[(fix.field_added)=FIX_5_0];
	optional sfixed64 transact_time = 23			[(fix.tag)=60, (fix.type)=UTC_TIMESTAMP];
}
message SecListGrp {
	optional string currency = 1				[(fix.tag)=15, (fix.type)=CURRENCY];
	optional bytes encoded_text = 2				[(fix.tag)=355, (fix.type)=DATA];
	optional fixed32 encoded_text_len = 3			[(fix.tag)=354, (fix.type)=LENGTH];
	optional Common.FinancingDetails financing_details = 4	[(fix.field_added)=FIX_4_4];
	repeated Common.InstrmtLegSecListGrp instrmt_leg_sec_list_grp = 5	[(fix.tag)=555];
	optional Common.Instrument instrument = 6		[(fix.field_added)=FIX_4_4];
	optional Common.InstrumentExtension instrument_extension = 7	[(fix.field_added)=FIX_4_4];
	optional Common.SpreadOrBenchmarkCurveData spread_or_benchmark_curve_data = 8	[(fix.field_added)=FIX_4_4];
	repeated Common.Stipulations stipulations = 9		[(fix.tag)=232];
	optional string text = 10				[(fix.tag)=58, (fix.type)=STRING];
	repeated Common.UndInstrmtGrp und_instrmt_grp = 11	[(fix.tag)=711];
	optional Common.YieldData yield_data = 12		[(fix.field_added)=FIX_4_4];
	optional Common.SecurityTradingRules security_trading_rules = 13	[(fix.field_added)=FIX_5_0];
	repeated Common.StrikeRules strike_rules = 14		[(fix.tag)=1201];
	optional sfixed64 rel_sym_transact_time = 15		[(fix.tag)=1504, (fix.type)=UTC_TIMESTAMP];
}

enum SecurityListTypeEnum {
	SECURITY_LIST_TYPE_INDUSTRY_CLASSIFICATION = 0		[(fix.enum_value)="1"];
	SECURITY_LIST_TYPE_MARKET = 1				[(fix.enum_value)="3"];
	SECURITY_LIST_TYPE_NEWSPAPER_LIST = 2			[(fix.enum_value)="4"];
	SECURITY_LIST_TYPE_TRADING_LIST = 3			[(fix.enum_value)="2"];
}

enum SecurityListTypeSourceEnum {
	SECURITY_LIST_TYPE_SOURCE_GICS = 0			[(fix.enum_value)="3"];
	SECURITY_LIST_TYPE_SOURCE_ICB = 1			[(fix.enum_value)="1"];
	SECURITY_LIST_TYPE_SOURCE_NAICS = 2			[(fix.enum_value)="2"];
}

enum SecurityRequestResultEnum {
	SECURITY_REQUEST_RESULT_INSTRUMENT_DATA_TEMPORARILY_UNAVAILABLE = 0	[(fix.enum_value)="4"];
	SECURITY_REQUEST_RESULT_INVALID_OR_UNSUPPORTED_REQUEST = 1	[(fix.enum_value)="1"];
	SECURITY_REQUEST_RESULT_NO_INSTRUMENTS_FOUND = 2	[(fix.enum_value)="2"];
	SECURITY_REQUEST_RESULT_NOT_AUTHORIZED_TO_RETRIEVE_INSTRUMENT_DATA = 3	[(fix.enum_value)="3"];
	SECURITY_REQUEST_RESULT_REQUEST_FOR_INSTRUMENT_DATA_NOT_SUPPORTED = 4	[(fix.enum_value)="5"];
	SECURITY_REQUEST_RESULT_VALID_REQUEST = 5		[(fix.enum_value)="0"];
}

enum LastFragmentEnum {
	LAST_FRAGMENT_LAST_MESSAGE = 0				[(fix.enum_value)="Y"];
	LAST_FRAGMENT_NOT_LAST_MESSAGE = 1			[(fix.enum_value)="N"];
}

message SecurityListTypeUnion {
	optional SecurityListTypeEnum security_list_type = 1;
	optional sfixed64 security_list_type_sfixed64 = 2;
}

message SecurityListTypeSourceUnion {
	optional SecurityListTypeSourceEnum security_list_type_source = 1;
	optional sfixed64 security_list_type_source_sfixed64 = 2;
}

message SecurityList {
	option (fix.msg_type) = "y";
	optional string security_req_id = 1			[(fix.tag)=320, (fix.type)=STRING];
	optional SecurityRequestResultEnum security_request_result = 2	[(fix.tag)=560, (fix.type)=INT];
	optional string security_response_id = 3		[(fix.tag)=322, (fix.type)=STRING];
	optional Session.StandardHeader standard_header = 4	[(fix.field_added)=FIX_4_3];
	optional Session.StandardTrailer standard_trailer = 5	[(fix.field_added)=FIX_4_3];
	optional sfixed64 tot_no_related_sym = 6		[(fix.tag)=393, (fix.type)=INT];
	optional sfixed32 clearing_business_date = 7		[(fix.tag)=715, (fix.type)=LOCAL_MKT_DATE];
	optional bool last_fragment = 8				[(fix.tag)=893, (fix.type)=BOOLEAN];
	repeated SecListGrp sec_list_grp = 9			[(fix.tag)=146];
	optional sfixed64 security_report_id = 10		[(fix.tag)=964, (fix.type)=INT];
	optional Common.ApplicationSequenceControl application_sequence_control = 11	[(fix.field_added)=FIX_5_0];
	optional string market_id = 12				[(fix.tag)=1301, (fix.type)=EXCHANGE];
	optional string market_segment_id = 13			[(fix.tag)=1300, (fix.type)=STRING];
	optional bytes encoded_security_list_desc = 14		[(fix.tag)=1469, (fix.type)=DATA];
	optional fixed32 encoded_security_list_desc_len = 15	[(fix.tag)=1468, (fix.type)=LENGTH];
	optional string security_list_desc = 16			[(fix.tag)=1467, (fix.type)=STRING];
	optional string security_list_id = 17			[(fix.tag)=1465, (fix.type)=STRING];
	optional string security_list_ref_id = 18		[(fix.tag)=1466, (fix.type)=STRING];
	optional SecurityListTypeEnum security_list_type = 19	[(fix.tag)=1470, (fix.type)=INT];
	optional SecurityListTypeSourceEnum security_list_type_source = 20	[(fix.tag)=1471, (fix.type)=INT];
	optional sfixed64 transact_time = 21			[(fix.tag)=60, (fix.type)=UTC_TIMESTAMP];
}
enum SecurityListRequestTypeEnum {
	SECURITY_LIST_REQUEST_TYPE_ALL_SECURITIES = 0		[(fix.enum_value)="4"];
	SECURITY_LIST_REQUEST_TYPE_PRODUCT = 1			[(fix.enum_value)="2"];
	SECURITY_LIST_REQUEST_TYPE_SECURITY_TYPE_AND = 2	[(fix.enum_value)="1"];
	SECURITY_LIST_REQUEST_TYPE_SYMBOL = 3			[(fix.enum_value)="0"];
	SECURITY_LIST_REQUEST_TYPE_TRADING_SESSION_ID = 4	[(fix.enum_value)="3"];
	SECURITY_LIST_REQUEST_TYPE_MARKET_ID_OR_MARKET_ID = 5	[(fix.enum_value)="5"];
}

message SecurityListRequest {
	option (fix.msg_type) = "x";
	optional string currency = 1				[(fix.tag)=15, (fix.type)=CURRENCY];
	optional bytes encoded_text = 2				[(fix.tag)=355, (fix.type)=DATA];
	optional fixed32 encoded_text_len = 3			[(fix.tag)=354, (fix.type)=LENGTH];
	optional Common.Instrument instrument = 4		[(fix.field_added)=FIX_4_3];
	optional SecurityListRequestTypeEnum security_list_request_type = 5	[(fix.tag)=559, (fix.type)=INT];
	optional string security_req_id = 6			[(fix.tag)=320, (fix.type)=STRING];
	optional Session.StandardHeader standard_header = 7	[(fix.field_added)=FIX_4_3];
	optional Session.StandardTrailer standard_trailer = 8	[(fix.field_added)=FIX_4_3];
	optional SubscriptionRequestTypeEnum subscription_request_type = 9	[(fix.tag)=263, (fix.type)=CHAR];
	optional string text = 10				[(fix.tag)=58, (fix.type)=STRING];
	optional TradingSessionIdEnum trading_session_id = 11	[(fix.tag)=336, (fix.type)=STRING];
	optional TradingSessionSubIdEnum trading_session_sub_id = 12	[(fix.tag)=625, (fix.type)=STRING];
	optional Common.FinancingDetails financing_details = 13	[(fix.field_added)=FIX_4_4];
	repeated Common.InstrmtLegGrp instrmt_leg_grp = 14	[(fix.tag)=555];
	optional Common.InstrumentExtension instrument_extension = 15	[(fix.field_added)=FIX_4_4];
	repeated Common.UndInstrmtGrp und_instrmt_grp = 16	[(fix.tag)=711];
	optional string market_id = 17				[(fix.tag)=1301, (fix.type)=EXCHANGE];
	optional string market_segment_id = 18			[(fix.tag)=1300, (fix.type)=STRING];
	optional string security_list_id = 19			[(fix.tag)=1465, (fix.type)=STRING];
	optional SecurityListTypeEnum security_list_type = 20	[(fix.tag)=1470, (fix.type)=INT];
	optional SecurityListTypeSourceEnum security_list_type_source = 21	[(fix.tag)=1471, (fix.type)=INT];
}
enum LegSwapTypeEnum {
	LEG_SWAP_TYPE_MODIFIED_DURATION = 0			[(fix.enum_value)="2"];
	LEG_SWAP_TYPE_PAR_FOR_PAR = 1				[(fix.enum_value)="1"];
	LEG_SWAP_TYPE_PROCEEDS = 2				[(fix.enum_value)="5"];
	LEG_SWAP_TYPE_RISK = 3					[(fix.enum_value)="4"];
}

message SecLstUpdRelSymsLegGrp {
	optional Common.InstrumentLeg instrument_leg = 1	[(fix.field_added)=FIX_4_4];
	optional Common.LegBenchmarkCurveData leg_benchmark_curve_data = 2	[(fix.field_added)=FIX_4_4];
	optional string leg_settl_type = 3			[(fix.tag)=587, (fix.type)=CHAR];
	repeated Common.LegStipulations leg_stipulations = 4	[(fix.tag)=683];
	optional LegSwapTypeEnum leg_swap_type = 5		[(fix.tag)=690, (fix.type)=INT];
}

message SecLstUpdRelSymGrp {
	optional string currency = 1				[(fix.tag)=15, (fix.type)=CURRENCY];
	optional bytes encoded_text = 2				[(fix.tag)=355, (fix.type)=DATA];
	optional fixed32 encoded_text_len = 3			[(fix.tag)=354, (fix.type)=LENGTH];
	optional Common.FinancingDetails financing_details = 4	[(fix.field_added)=FIX_4_4];
	optional Common.Instrument instrument = 5		[(fix.field_added)=FIX_4_4];
	optional Common.InstrumentExtension instrument_extension = 6	[(fix.field_added)=FIX_4_4];
	repeated SecLstUpdRelSymsLegGrp sec_lst_upd_rel_syms_leg_grp = 7	[(fix.tag)=555];
	optional Common.SpreadOrBenchmarkCurveData spread_or_benchmark_curve_data = 8	[(fix.field_added)=FIX_4_4];
	repeated Common.Stipulations stipulations = 9		[(fix.tag)=232];
	optional string text = 10				[(fix.tag)=58, (fix.type)=STRING];
	optional Common.YieldData yield_data = 11		[(fix.field_added)=FIX_4_4];
	optional string list_update_action = 12			[(fix.tag)=1324, (fix.type)=CHAR];
	optional Common.SecurityTradingRules security_trading_rules = 13	[(fix.field_added)=FIX_5_0];
	repeated Common.StrikeRules strike_rules = 14		[(fix.tag)=1201];
	repeated Common.UndInstrmtGrp und_instrmt_grp = 15	[(fix.tag)=711];
	optional sfixed64 rel_sym_transact_time = 16		[(fix.tag)=1504, (fix.type)=UTC_TIMESTAMP];
}

message SecurityListUpdateReport {
	option (fix.msg_type) = "BK";
	optional sfixed32 clearing_business_date = 1		[(fix.tag)=715, (fix.type)=LOCAL_MKT_DATE];
	repeated CorporateActionEnum corporate_action = 2	[packed=true,(fix.tag)=292, (fix.type)=MULTIPLE_CHAR_VALUE];
	optional bool last_fragment = 3				[(fix.tag)=893, (fix.type)=BOOLEAN];
	repeated SecLstUpdRelSymGrp sec_lst_upd_rel_sym_grp = 4	[(fix.tag)=146];
	optional sfixed64 security_report_id = 5		[(fix.tag)=964, (fix.type)=INT];
	optional string security_req_id = 6			[(fix.tag)=320, (fix.type)=STRING];
	optional SecurityRequestResultEnum security_request_result = 7	[(fix.tag)=560, (fix.type)=INT];
	optional string security_response_id = 8		[(fix.tag)=322, (fix.type)=STRING];
	optional SecurityUpdateActionEnum security_update_action = 9	[(fix.tag)=980, (fix.type)=CHAR];
	optional Session.StandardHeader standard_header = 10	[(fix.field_added)=FIX_4_4];
	optional Session.StandardTrailer standard_trailer = 11	[(fix.field_added)=FIX_4_4];
	optional sfixed64 tot_no_related_sym = 12		[(fix.tag)=393, (fix.type)=INT];
	optional Common.ApplicationSequenceControl application_sequence_control = 13	[(fix.field_added)=FIX_5_0];
	optional string market_id = 14				[(fix.tag)=1301, (fix.type)=EXCHANGE];
	optional string market_segment_id = 15			[(fix.tag)=1300, (fix.type)=STRING];
	optional bytes encoded_security_list_desc = 16		[(fix.tag)=1469, (fix.type)=DATA];
	optional fixed32 encoded_security_list_desc_len = 17	[(fix.tag)=1468, (fix.type)=LENGTH];
	optional string security_list_desc = 18			[(fix.tag)=1467, (fix.type)=STRING];
	optional string security_list_id = 19			[(fix.tag)=1465, (fix.type)=STRING];
	optional string security_list_ref_id = 20		[(fix.tag)=1466, (fix.type)=STRING];
	optional SecurityListTypeEnum security_list_type = 21	[(fix.tag)=1470, (fix.type)=INT];
	optional SecurityListTypeSourceEnum security_list_type_source = 22	[(fix.tag)=1471, (fix.type)=INT];
	optional sfixed64 transact_time = 23			[(fix.tag)=60, (fix.type)=UTC_TIMESTAMP];
}
